name: Deploy SpringBoot to Aliyun ECS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 拉代码
      - uses: actions/checkout@v4

      # 2. 设置 JDK 21
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Maven 打包
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 4. 把生成的 jar 传到服务器
      - name: Upload jar to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: 120.24.109.29
          username: root
          key: ${{ secrets.PRIVATE_KEY }}
          source: "target/*.jar"
          target: "/root/springboot"
          strip_components: 1

      # 5. 重启服务（修复版本）
      - name: Restart application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 120.24.109.29
          username: root
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /root/springboot

            # 检查并杀死现有进程
            echo "Checking for existing process on port 9011..."
            PID=$(lsof -ti:9011 || echo "")
            if [ -n "$PID" ]; then
              echo "Killing existing process: $PID"
              kill -9 $PID
              sleep 3
            else
              echo "No existing process found on port 9011"
            fi

            # 备份旧日志
            if [ -f app.log ]; then
              cp app.log "app.log.$(date +%Y%m%d_%H%M%S).bak"
            fi

            # 启动新进程（强制使用 IPv4）
            echo "Starting new SpringBoot application..."
            nohup java -Djava.net.preferIPv4Stack=true -jar *.jar --server.port=9011 > app.log 2>&1 &
            START_PID=$!

            # 等待应用初始化
            echo "Waiting for application to start..."
            sleep 30

            # 检查进程是否仍在运行
            if ! kill -0 $START_PID 2>/dev/null; then
              echo "❌ Java process crashed after startup!"
              echo "=== Last 50 lines of app.log ==="
              tail -50 app.log || echo "No log file found"
              exit 1
            fi

            # 检查端口是否监听
            NEW_PID=$(lsof -ti:9011 || echo "")
            if [ -z "$NEW_PID" ]; then
              echo "❌ No process found listening on port 9011"
              echo "=== Last 50 lines of app.log ==="
              tail -50 app.log || echo "No log file found"
              exit 1
            fi

            echo "✅ SpringBoot restarted successfully on port 9011 (PID: $NEW_PID)"

            # 健康检查（使用 127.0.0.1 避免 localhost 解析问题）
            echo "Performing health check..."
            for i in {1..10}; do
              if curl -f -s http://127.0.0.1:9011/actuator/health > /dev/null 2>&1; then
                echo "✅ Health check passed!"
                echo "📝 Log file: /root/springboot/app.log"
                echo "🌐 Application URL: http://120.24.109.29:9011"
                exit 0  # 成功退出
              else
                echo "⏳ Waiting for application to be ready... ($i/10)"
                sleep 10
              fi
            done

            # 最终失败处理
            echo "❌ Health check failed after multiple attempts"
            echo "=== Last 50 lines of app.log ==="
            tail -50 app.log || echo "No log file found"
            exit 1